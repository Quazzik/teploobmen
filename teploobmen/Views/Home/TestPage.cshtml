@using TeploobmenLibrary.Models
@model TestPageModel
@{
    ViewData["Title"] = "Test Page";
}
<div class="row">
    <div class="col-md-6">
        <form action="/Home/TestPage" method="post" class="form-floating">
        <div class="mb-3">
            <label for="RasH" class="form-control" type="text" placeholder="Default input" aria-label="default input example">Высота слоя:</label>
                <input name="InputData.RasH" id="RasH" value="@Model?.InputData?.RasH" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="RasTm" class="form-control" type="text" placeholder="Default input" aria-label="default input example">Начальная температура материала:</label>
                <input name="InputData.RasTm" id="RasTm" value="@Model?.InputData?.RasTm" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="RasTg" class="form-control" type="text" placeholder="Default input" aria-label="default input example">Начальная температура газа:</label>
                <input name="InputData.RasTg" id="RasTg" value="@Model?.InputData?.RasTg" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="RasV" class="form-control" type="text" placeholder="Default input" aria-label="default input example">Скорость газа на свободное сечение шахты:</label>
                <input name="InputData.RasV" id="RasV" value="@Model?.InputData?.RasV" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="RasTemG" class="form-control" type="text" placeholder="Default input" aria-label="default input example">Средняя теплоёмкость газа:</label>
                <input name="InputData.RasTemG" id="RasTemG" value="@Model?.InputData?.RasTemG" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="RasRas" class="form-control" type="text" placeholder="Default input" aria-label="default input example">Расход материалов:</label>
                <input name="InputData.RasRas" id="RasRas" value="@Model?.InputData?.RasRas" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="RasTemM" class="form-control" type="text" placeholder="Default input" aria-label="default input example">Теплоемкость материалов:</label>
                <input name="InputData.RasTemM" id="RasTemM" value="@Model?.InputData?.RasTemM" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="RasTepl" class="form-control" type="text" placeholder="Default input" aria-label="default input example">Объемный коэффициент теплоотдачи:</label>
                <input name="InputData.RasTepl" id="RasTepl" value="@Model?.InputData?.RasTepl" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="RasD" class="form-control" type="text" placeholder="Default input" aria-label="default input example">Диаметр аппарата:</label>
                <input name="InputData.RasD" id="RasD" value="@Model?.InputData?.RasD" class="form-control" />
        </div>
        <div>
            <button type="submit" class="btn btn-outline-primary">Рассчитать</button>
        </div>
    </form>
    </div>
    <div class="col-md-6">
    <table class="table table-striped">
        <tr>
            <td>Высота слоя</td>
                @foreach (var row in Model?.OutputModel?.RowModels ?? new List<TableRowModel>())
            {
                <td>@Math.Round(row.RasH,1)</td>
            }
        </tr>
        <tr>
            <td>Y</td>
                @foreach (var row in Model?.OutputModel?.RowModels ?? new List<TableRowModel>())
            {
                <td>@Math.Round(row.Y,3)</td>
            }
        </tr>
        <tr>
            <td>exp</td>
                @foreach (var row in Model?.OutputModel?.RowModels ?? new List<TableRowModel>())
            {
                <td>@Math.Round(row.ExpY,3)</td>
            }
        </tr>
        <tr>
            <td>mexp</td>
                @foreach (var row in Model?.OutputModel?.RowModels ?? new List<TableRowModel>())
            {
                <td>@Math.Round(row.MexpY,3)</td>
            }
        </tr>
        <tr>
            <td>V</td>
                @foreach (var row in Model?.OutputModel?.RowModels ?? new List<TableRowModel>())
            {
                <td>@Math.Round(row.V,3)</td>
            }
        </tr>
        <tr>
            <td>O</td>
                @foreach (var row in Model?.OutputModel?.RowModels ?? new List<TableRowModel>())
            {
                <td>@Math.Round(row.O,3)</td>
            }
        </tr>
        <tr>
            <td>t</td>
                @foreach (var row in Model?.OutputModel?.RowModels ?? new List<TableRowModel>())
            {
                <td>@Math.Round(row.t,3)</td>
            }
        </tr>
        <tr>
            <td>T</td>
                @foreach (var row in Model?.OutputModel?.RowModels ?? new List<TableRowModel>())
                {
                <td>@Math.Round(row.T,3)</td>
            }
        </tr>
        <tr>
            <td>T - t</td>
                @foreach (var row in Model?.OutputModel?.RowModels ?? new List<TableRowModel>())
            {
                <td>@Math.Round(row.DeltaT,3)</td>
            }
        </tr>
    </table>
    <div>
        <canvas id="myChart"></canvas>
    </div>
</div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.1/chart.umd.js" integrity="sha512-ZwR1/gSZM3ai6vCdI+LVF1zSq/5HznD3ZSTk7kajkaj4D292NLuduDCO1c/NT8Id+jE58KYLKT7hXnbtryGmMg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
    var lables = @Json.Serialize(Model?.OutputModel?.RowModels.Select(row => row.RasH).ToList())
    var tgaz = @Json.Serialize(Model?.OutputModel?.RowModels.Select(row => row.T).ToList())
    var tmat = @Json.Serialize(Model?.OutputModel?.RowModels.Select(row => row.t).ToList())
    var delta = @Json.Serialize(Model?.OutputModel?.RowModels.Select(row => row.DeltaT).ToList())
    const ctx = document.getElementById('myChart');

    new Chart(ctx, {
        type: 'line',
        data: {
            labels: lables,
            datasets: [{
                label: 'f(H) = T, Температура газа',
                data: tgaz,
                borderWidth: 1
            },
                {
            label: 'f(H) = t, Температура материала',
                data: tmat,
            borderWidth: 1
        },
            {
                label: 'Разница температур',
                data: delta,
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                x: {
                    title: { display: true, text: 'Высота слоя' }
                },
                y: {
                    title: { display: true, text: 'Температура' }
                }
            }
        }
    });
</script>